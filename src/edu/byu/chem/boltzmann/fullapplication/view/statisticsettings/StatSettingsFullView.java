/*
 * Boltzmann 3D, a kinetic theory demonstrator
 * Copyright (C) 2013 Dr. Randall B. Shirts
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package edu.byu.chem.boltzmann.fullapplication.view.statisticsettings;

import edu.byu.chem.boltzmann.utils.Units;
import edu.byu.chem.boltzmann.utils.data.StatSettingsInfo;
import edu.byu.chem.boltzmann.view.statisticsettings.StatSettingsController;
import edu.byu.chem.boltzmann.view.statisticsettings.StatSettingsView;

/**
 * Created 7 May 2011
 * @author Derek Manwaring
 */
public class StatSettingsFullView extends javax.swing.JPanel implements StatSettingsView {

    private StatSettingsController controller;
    
    private String lastForgetTime = "";
    private String lastPresAvgTime = "";
    private String lastRDFUpdateFreq = "";
    
    /** Creates new form View */
    public StatSettingsFullView() {
        initComponents();
        lastForgetTime = txtFldForgetTime.getText();
        lastPresAvgTime = txtFldPresAvgTime.getText();
        lastRDFUpdateFreq = txtFldRDFUpdateFreq.getText();
    }

    public void attachController(StatSettingsController controller) {
        this.controller = controller;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGlobalSettingsOuter = new javax.swing.JPanel();
        pnlGlobalTitle = new javax.swing.JPanel();
        lblGlobal = new javax.swing.JLabel();
        pnlGlobalSettingsHolder = new javax.swing.JPanel();
        pnlGlobalSettings = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFldForgetTime = new javax.swing.JTextField();
        chkBoxFinSysCorrections = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        chkBoxRealGasCorrections = new javax.swing.JCheckBox();
        pnlDivider = new javax.swing.JPanel();
        sprtrDivider = new javax.swing.JSeparator();
        lblStatSpecific = new javax.swing.JLabel();
        pnlGlobalSettingsHolder1 = new javax.swing.JPanel();
        pnlGlobalSettings2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtFldPresAvgTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtFldRDFUpdateFreq = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chkBoxExhaustiveRDFCalcs = new javax.swing.JCheckBox();
        pnlDone = new javax.swing.JPanel();
        btnDone = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        pnlGlobalSettingsOuter.setLayout(new javax.swing.BoxLayout(pnlGlobalSettingsOuter, javax.swing.BoxLayout.PAGE_AXIS));

        pnlGlobalTitle.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        lblGlobal.setText("Global Settings:");
        pnlGlobalTitle.add(lblGlobal);

        pnlGlobalSettingsOuter.add(pnlGlobalTitle);

        pnlGlobalSettingsHolder.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        pnlGlobalSettings.setPreferredSize(new java.awt.Dimension(340, 45));

        jLabel2.setText("Forget time:");

        txtFldForgetTime.setText("4.0");
        txtFldForgetTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldForgetTimeActionPerformed(evt);
            }
        });
        txtFldForgetTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFldForgetTimeFocusLost(evt);
            }
        });

        chkBoxFinSysCorrections.setText("Use finite system corrections");
        chkBoxFinSysCorrections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxFinSysCorrectionsActionPerformed(evt);
            }
        });

        jLabel3.setText("X collision lifetime");

        chkBoxRealGasCorrections.setText("Use real gas corrections");
        chkBoxRealGasCorrections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxRealGasCorrectionsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlGlobalSettingsLayout = new org.jdesktop.layout.GroupLayout(pnlGlobalSettings);
        pnlGlobalSettings.setLayout(pnlGlobalSettingsLayout);
        pnlGlobalSettingsLayout.setHorizontalGroup(
            pnlGlobalSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlGlobalSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlGlobalSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlGlobalSettingsLayout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtFldForgetTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3))
                    .add(pnlGlobalSettingsLayout.createSequentialGroup()
                        .add(chkBoxFinSysCorrections)
                        .add(18, 18, 18)
                        .add(chkBoxRealGasCorrections)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pnlGlobalSettingsLayout.setVerticalGroup(
            pnlGlobalSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlGlobalSettingsLayout.createSequentialGroup()
                .add(pnlGlobalSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtFldForgetTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlGlobalSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chkBoxFinSysCorrections)
                    .add(chkBoxRealGasCorrections)))
        );

        pnlGlobalSettingsHolder.add(pnlGlobalSettings);

        pnlGlobalSettingsOuter.add(pnlGlobalSettingsHolder);

        add(pnlGlobalSettingsOuter);

        pnlDivider.setPreferredSize(new java.awt.Dimension(370, 116));

        sprtrDivider.setPreferredSize(new java.awt.Dimension(100, 10));

        lblStatSpecific.setText("Statistic Specific Settings:");

        pnlGlobalSettingsHolder1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        pnlGlobalSettings2.setPreferredSize(new java.awt.Dimension(340, 72));

        jLabel6.setText("Pressure averaging time:");

        txtFldPresAvgTime.setText("60");
        txtFldPresAvgTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldPresAvgTimeActionPerformed(evt);
            }
        });
        txtFldPresAvgTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFldPresAvgTimeFocusLost(evt);
            }
        });

        jLabel7.setText("ps");

        jLabel1.setText("RDF update frequency:");

        txtFldRDFUpdateFreq.setText("0.5");
        txtFldRDFUpdateFreq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldRDFUpdateFreqActionPerformed(evt);
            }
        });
        txtFldRDFUpdateFreq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFldRDFUpdateFreqFocusLost(evt);
            }
        });

        jLabel4.setText("X collision lifetime");

        chkBoxExhaustiveRDFCalcs.setText("Exhaustive RDF calculations");
        chkBoxExhaustiveRDFCalcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxExhaustiveRDFCalcsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlGlobalSettings2Layout = new org.jdesktop.layout.GroupLayout(pnlGlobalSettings2);
        pnlGlobalSettings2.setLayout(pnlGlobalSettings2Layout);
        pnlGlobalSettings2Layout.setHorizontalGroup(
            pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlGlobalSettings2Layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlGlobalSettings2Layout.createSequentialGroup()
                        .add(pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(pnlGlobalSettings2Layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtFldPresAvgTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnlGlobalSettings2Layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(txtFldRDFUpdateFreq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(jLabel4)))
                    .add(chkBoxExhaustiveRDFCalcs))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pnlGlobalSettings2Layout.setVerticalGroup(
            pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlGlobalSettings2Layout.createSequentialGroup()
                .add(pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(txtFldPresAvgTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlGlobalSettings2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtFldRDFUpdateFreq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkBoxExhaustiveRDFCalcs)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlGlobalSettingsHolder1.add(pnlGlobalSettings2);

        org.jdesktop.layout.GroupLayout pnlDividerLayout = new org.jdesktop.layout.GroupLayout(pnlDivider);
        pnlDivider.setLayout(pnlDividerLayout);
        pnlDividerLayout.setHorizontalGroup(
            pnlDividerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlDividerLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlDividerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sprtrDivider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pnlDividerLayout.createSequentialGroup()
                        .add(lblStatSpecific)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(pnlDividerLayout.createSequentialGroup()
                .add(pnlGlobalSettingsHolder1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 20, Short.MAX_VALUE))
        );
        pnlDividerLayout.setVerticalGroup(
            pnlDividerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlDividerLayout.createSequentialGroup()
                .add(sprtrDivider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblStatSpecific)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnlGlobalSettingsHolder1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(pnlDivider);

        pnlDone.setPreferredSize(new java.awt.Dimension(370, 26));

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlDoneLayout = new org.jdesktop.layout.GroupLayout(pnlDone);
        pnlDone.setLayout(pnlDoneLayout);
        pnlDoneLayout.setHorizontalGroup(
            pnlDoneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlDoneLayout.createSequentialGroup()
                .addContainerGap(301, Short.MAX_VALUE)
                .add(btnDone)
                .addContainerGap())
        );
        pnlDoneLayout.setVerticalGroup(
            pnlDoneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlDoneLayout.createSequentialGroup()
                .add(btnDone)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnlDone);
    }// </editor-fold>//GEN-END:initComponents

    private void chkBoxFinSysCorrectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxFinSysCorrectionsActionPerformed
        controller.setFiniteSysCorrections(chkBoxFinSysCorrections.isSelected());
    }//GEN-LAST:event_chkBoxFinSysCorrectionsActionPerformed

    private void txtFldForgetTimeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFldForgetTimeFocusLost
        handleForgetTimeChange();
    }//GEN-LAST:event_txtFldForgetTimeFocusLost

    private void txtFldForgetTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldForgetTimeActionPerformed
        handleForgetTimeChange();
    }//GEN-LAST:event_txtFldForgetTimeActionPerformed

    private void chkBoxRealGasCorrectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxRealGasCorrectionsActionPerformed
        controller.setRealGasCorrections(chkBoxRealGasCorrections.isSelected());
    }//GEN-LAST:event_chkBoxRealGasCorrectionsActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        controller.hideView();
    }//GEN-LAST:event_btnDoneActionPerformed

    private void txtFldPresAvgTimeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFldPresAvgTimeFocusLost
        handlePresAvgTimeChange();
    }//GEN-LAST:event_txtFldPresAvgTimeFocusLost

    private void txtFldPresAvgTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldPresAvgTimeActionPerformed
        handlePresAvgTimeChange();
    }//GEN-LAST:event_txtFldPresAvgTimeActionPerformed

    private void txtFldRDFUpdateFreqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldRDFUpdateFreqActionPerformed
        handleRDFUpdateFreqChange();
    }//GEN-LAST:event_txtFldRDFUpdateFreqActionPerformed

    private void txtFldRDFUpdateFreqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFldRDFUpdateFreqFocusLost
        handleRDFUpdateFreqChange();
    }//GEN-LAST:event_txtFldRDFUpdateFreqFocusLost

    private void chkBoxExhaustiveRDFCalcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxExhaustiveRDFCalcsActionPerformed
        controller.setExhaustiveRDFCalcs(chkBoxExhaustiveRDFCalcs.isSelected());
    }//GEN-LAST:event_chkBoxExhaustiveRDFCalcsActionPerformed

    private void handleForgetTimeChange() {
        try {
            String forgetMult = txtFldForgetTime.getText();
            double newForgetMultipler = Double.parseDouble(forgetMult);
            controller.setForgetMultiplier(newForgetMultipler);
            lastForgetTime = forgetMult;
            
        } catch (NumberFormatException ex) {
            txtFldForgetTime.setText(lastForgetTime);
        }
    }
    
    private void handlePresAvgTimeChange() {
        try {
            String avgTime = txtFldPresAvgTime.getText();
            double newPresAvgTime = Double.parseDouble(avgTime);
            controller.setPressureAveragingTime(newPresAvgTime);
            lastPresAvgTime = avgTime;
            
        } catch (NumberFormatException ex) {
            txtFldPresAvgTime.setText(lastPresAvgTime);
        }
    }
    
    private void handleRDFUpdateFreqChange() {
        try {
            String rdfUpdateMult = txtFldRDFUpdateFreq.getText();
            double newRDFUpdateMultiplier = Double.parseDouble(rdfUpdateMult);
            controller.setRDFUpdateMultiplier(newRDFUpdateMultiplier);
            lastRDFUpdateFreq = rdfUpdateMult;            
            
        } catch (NumberFormatException ex) {
            txtFldRDFUpdateFreq.setText(lastRDFUpdateFreq);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDone;
    private javax.swing.JCheckBox chkBoxExhaustiveRDFCalcs;
    private javax.swing.JCheckBox chkBoxFinSysCorrections;
    private javax.swing.JCheckBox chkBoxRealGasCorrections;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblGlobal;
    private javax.swing.JLabel lblStatSpecific;
    private javax.swing.JPanel pnlDivider;
    private javax.swing.JPanel pnlDone;
    private javax.swing.JPanel pnlGlobalSettings;
    private javax.swing.JPanel pnlGlobalSettings2;
    private javax.swing.JPanel pnlGlobalSettingsHolder;
    private javax.swing.JPanel pnlGlobalSettingsHolder1;
    private javax.swing.JPanel pnlGlobalSettingsOuter;
    private javax.swing.JPanel pnlGlobalTitle;
    private javax.swing.JSeparator sprtrDivider;
    private javax.swing.JTextField txtFldForgetTime;
    private javax.swing.JTextField txtFldPresAvgTime;
    private javax.swing.JTextField txtFldRDFUpdateFreq;
    // End of variables declaration//GEN-END:variables

    StatSettingsController getController() {
        return controller;
    }

    public StatSettingsInfo getStatSettings(){
        double forgetTime = Double.parseDouble(lastForgetTime);
        boolean useFinSysCorrections = chkBoxFinSysCorrections.isSelected();
        boolean useRealGasCorrections = chkBoxRealGasCorrections.isSelected();
        
        double presAvgTime = Units.convert("ps", "s", Double.parseDouble(lastPresAvgTime));
        double rdfUpdateFreq = Double.parseDouble(lastRDFUpdateFreq);
        boolean exhausiveRDFCalcs = chkBoxExhaustiveRDFCalcs.isSelected();
        
        return new StatSettingsInfo(forgetTime, useFinSysCorrections, useRealGasCorrections,
                presAvgTime, rdfUpdateFreq, exhausiveRDFCalcs);
    }
}
